#   .[15] %>%
#   html_table(fill = TRUE) %>%
#   .[[1]]
# View(tbls$AllTax)
print(paste0(tbls$Ownership[8,2], " acres at ", tbls$Ownership[3,2],
" owned by ", tbls$Ownership[2,2], "."))
}
for(i in (dedications$TMK[347])) {
# Main page on QPublic Parcel Data
html <- read_html(sprintf("http://qpublic9.qpublic.net/hi_honolulu_display.php?county=hi_honolulu&KEY=%s",i))
#Historical assessments page of QPublic
html2 <- read_html(sprintf("http://qpublic9.qpublic.net/hi_honolulu_display.php?KEY=%s&show_history=1&",i))
# land information print page
html3 <- read_html(sprintf("http://qpublic9.qpublic.net/hi_honolulu_land_print.php?KEY=%s", i))
# Create empty list to add table data into
tbls <- list()
# Specify which table(s) from html you want to grab & name them something useful (e.g., Ownership, ... , Uses)
# Owner and Parcel Information
tbls$Ownership <- html %>%
html_nodes("table") %>%
.[3] %>%
html_table(fill = TRUE) %>%
.[[1]]
tbls$Ownership <- tbls$Ownership[-1,] # remove redundant header
tbls$Ownership <- subset( tbls$Ownership, select = 1:2)
# View(tbls$Ownership)
# Assessment Information, grabs full assessment history from html2 urls
tbls$Assessment <- html2 %>%
html_nodes("table") %>%
.[5] %>%
html_table(fill = TRUE) %>%
.[[1]]
tbls$Assessment <- tbls$Assessment[-1,] # remove redundant header
tbls$Assessment <- head(tbls$Assessment, -1) # remove note at bottom ("2019 amended values not..." )
# View(tbls$Assessment)
#  Appeal Information
tbls$Land <- html %>%
html_nodes("table") %>%
.[6] %>%
html_table(fill = TRUE) %>%
.[[1]]
#  View(tbls$Appeal)
#  Land Information
tbls$Land <- html %>%
html_nodes("table") %>%
.[7] %>%
html_table(fill = TRUE) %>%
.[[1]]
#  View(tbls$Land)
# Agricultural Assessment Information
tbls$AgAssess <- html %>%
html_nodes("table") %>%
.[8] %>%
html_table(fill = TRUE) %>%
.[[1]]
#  View(tbls$AgAssess)
# Agricultural Assessment Information (print page)
tbls$AgAssessP <- html3 %>%
html_nodes("table") %>%
.[4] %>%
html_table(fill = TRUE) %>%
.[[1]]
# View(tbls$AgAssessP)
# Historical Tax Information
tbls$AllTax <- html2 %>%
html_nodes("table") %>%
.[15] %>%
html_table(fill = TRUE) %>%
.[[1]]
# View(tbls$AllTax)
# # Historical Tax Information
# tbls$AllTax <- html2 %>%
#   html_nodes("table") %>%
#   .[15] %>%
#   html_table(fill = TRUE) %>%
#   .[[1]]
# View(tbls$AllTax)
print(paste0(tbls$Ownership[8,2], " acres at ", tbls$Ownership[3,2],
" owned by ", tbls$Ownership[2,2], "."))
}
for(i in (dedications$TMK[3720])) {
# Main page on QPublic Parcel Data
html <- read_html(sprintf("http://qpublic9.qpublic.net/hi_honolulu_display.php?county=hi_honolulu&KEY=%s",i))
#Historical assessments page of QPublic
html2 <- read_html(sprintf("http://qpublic9.qpublic.net/hi_honolulu_display.php?KEY=%s&show_history=1&",i))
# land information print page
html3 <- read_html(sprintf("http://qpublic9.qpublic.net/hi_honolulu_land_print.php?KEY=%s", i))
# Create empty list to add table data into
tbls <- list()
# Specify which table(s) from html you want to grab & name them something useful (e.g., Ownership, ... , Uses)
# Owner and Parcel Information
tbls$Ownership <- html %>%
html_nodes("table") %>%
.[3] %>%
html_table(fill = TRUE) %>%
.[[1]]
tbls$Ownership <- tbls$Ownership[-1,] # remove redundant header
tbls$Ownership <- subset( tbls$Ownership, select = 1:2)
# View(tbls$Ownership)
# Assessment Information, grabs full assessment history from html2 urls
tbls$Assessment <- html2 %>%
html_nodes("table") %>%
.[5] %>%
html_table(fill = TRUE) %>%
.[[1]]
tbls$Assessment <- tbls$Assessment[-1,] # remove redundant header
tbls$Assessment <- head(tbls$Assessment, -1) # remove note at bottom ("2019 amended values not..." )
# View(tbls$Assessment)
#  Appeal Information
tbls$Land <- html %>%
html_nodes("table") %>%
.[6] %>%
html_table(fill = TRUE) %>%
.[[1]]
#  View(tbls$Appeal)
#  Land Information
tbls$Land <- html %>%
html_nodes("table") %>%
.[7] %>%
html_table(fill = TRUE) %>%
.[[1]]
#  View(tbls$Land)
# Agricultural Assessment Information
tbls$AgAssess <- html %>%
html_nodes("table") %>%
.[8] %>%
html_table(fill = TRUE) %>%
.[[1]]
#  View(tbls$AgAssess)
# Agricultural Assessment Information (print page)
tbls$AgAssessP <- html3 %>%
html_nodes("table") %>%
.[4] %>%
html_table(fill = TRUE) %>%
.[[1]]
# View(tbls$AgAssessP)
# Historical Tax Information
tbls$AllTax <- html2 %>%
html_nodes("table") %>%
.[15] %>%
html_table(fill = TRUE) %>%
.[[1]]
# View(tbls$AllTax)
# # Historical Tax Information
# tbls$AllTax <- html2 %>%
#   html_nodes("table") %>%
#   .[15] %>%
#   html_table(fill = TRUE) %>%
#   .[[1]]
# View(tbls$AllTax)
print(paste0(tbls$Ownership[8,2], " acres at ", tbls$Ownership[3,2],
" owned by ", tbls$Ownership[2,2], "."))
}
write.csv(dedications$Year=2018)
write.csv(dedications$Year==2018)
in18 <- subset(dedications,x = dedications,select = dedications$Year = 2018)
in18 <- subset(x = dedications,select = dedications$Year = 2018)
in18 <- subset(x = dedications,select = dedications$Year == 2018)
in18 <- subset(dedications, Year == 2018)
write.csv(x = in18,file = "2018ag")
# read data
p <- shapefile("~/Downloads/oahtmk.shp/oahtmk.shp")
library(raster)
# read data
p <- shapefile("~/Downloads/oahtmk.shp/oahtmk.shp")
View(in18)
View(in18)
View(strtrim(in18$TMK, 5))
in18 <- strtrim(in18$TMK, 8)
in18 <- subset(dedications, Year == 2018)
in18$TMK <- strtrim(in18$TMK, 8)
View(in18)
m <- merge(p, d, by='TMK')
d <- in18
# merge on common variable, here called 'key'
m <- merge(p, d, by='TMK')
in18 <- unique(in18)
m <- merge(p, d, by='TMK')
tmk <- p$TMK
tmk[duplicated(tmk), ]
duplicated(TMK)
tmk <- p$TMK
tmk <- as.dataframe(p$TMK)
tmk <- dataframe(p$TMK)
tmk <- data.frame(p$TMK)
duplicated(TMK)
duplicated(tmk)
hist(duplicated(tmk))
histogram(duplicated(tmk))
!duplicated(tmk)
n_occur <- data.frame(table(p$TMK))
n_occur[n_occur$Freq > 1,]
p[p$TMK %in% n_occur$Var1[n_occur$Freq > 1],]
View(p$qpub_link)
View(p$qpub_link[1])
in18 <- subset(dedications, Year == 2018)
n_occur <- data.frame(table(in18))
n_occur <- data.frame(table(in18))
n_occur <- data.frame(table(in18$TMK))
n_occur[n_occur$Freq > 1,]
in18[in18$TMK %in% n_occur$Var1[n_occur$Freq > 1],]
View(n_occur)
hist(n_occur)
hist(n_occur$Freq)
no1 <- subset(n_occur, Freq != 1)
hist(no1$Freq)
View(p$TMK == "68013009")
# try with shp
n_occur <- data.frame(table(p$TMK))
n_occur[n_occur$Freq > 1,]
# remove single record items
no1 <- subset(n_occur, Freq != 1)
# histogram
hist(no1$Freq)
in18
# trim the trailing digits
in18$TMK <- strtrim(in18$TMK, 8)
write.csv(x = in18,file = "2018ag")
write.csv(x = in18,file = "2018ag.csv")
in18 <- unique(in18)
in18 <- subset(dedications, Year == 2018)
in18 <- subset(dedications, Year == 2018)
in18 <- unique(in18)
# trim the trailing digits
in18$TMK <- strtrim(in18$TMK, 8)
# remove single record items
no1 <- subset(n_occur, Freq = 1)
n_occur <- data.frame(table(in18$TMK))
n_occur[n_occur$Freq > 1,]
# remove single record items
no1 <- subset(n_occur, Freq = 1)
ded18 <- read.csv("~/Downloads/AG_DED18.csv")
dedications$TMK[1]
dedications$TMK[2]
sprintf("http://qpublic9.qpublic.net/hi_honolulu_display.php?county=hi_honolulu&KEY=%s", dedications$TMK[2])
library(tidyverse)
glimpse(dedications)
library(rvest)
dedications$TMK[2]
# # Create a list of all the urls to be parsed based on the TMKs of dedicated parcels
urls <- sprintf("http://qpublic9.qpublic.net/hi_honolulu_display.php?county=hi_honolulu&KEY=%s", dedications$TMK[2])
for(i in (dedications$TMK[3720])) {
# Main page on QPublic Parcel Data
html <- read_html(sprintf("http://qpublic9.qpublic.net/hi_honolulu_display.php?county=hi_honolulu&KEY=%s",i))
#Historical assessments page of QPublic
html2 <- read_html(sprintf("http://qpublic9.qpublic.net/hi_honolulu_display.php?KEY=%s&show_history=1&",i))
# land information print page
html3 <- read_html(sprintf("http://qpublic9.qpublic.net/hi_honolulu_land_print.php?KEY=%s", i))
# Create empty list to add table data into
tbls <- list()
# Specify which table(s) from html you want to grab & name them something useful (e.g., Ownership, ... , Uses)
# Owner and Parcel Information
tbls$Ownership <- html %>%
html_nodes("table") %>%
.[3] %>%
html_table(fill = TRUE) %>%
.[[1]]
tbls$Ownership <- tbls$Ownership[-1,] # remove redundant header
tbls$Ownership <- subset( tbls$Ownership, select = 1:2)
# View(tbls$Ownership)
# Assessment Information, grabs full assessment history from html2 urls
tbls$Assessment <- html2 %>%
html_nodes("table") %>%
.[5] %>%
html_table(fill = TRUE) %>%
.[[1]]
tbls$Assessment <- tbls$Assessment[-1,] # remove redundant header
tbls$Assessment <- head(tbls$Assessment, -1) # remove note at bottom ("2019 amended values not..." )
# View(tbls$Assessment)
#  Appeal Information
tbls$Land <- html %>%
html_nodes("table") %>%
.[6] %>%
html_table(fill = TRUE) %>%
.[[1]]
#  View(tbls$Appeal)
#  Land Information
tbls$Land <- html %>%
html_nodes("table") %>%
.[7] %>%
html_table(fill = TRUE) %>%
.[[1]]
#  View(tbls$Land)
# Agricultural Assessment Information
tbls$AgAssess <- html %>%
html_nodes("table") %>%
.[8] %>%
html_table(fill = TRUE) %>%
.[[1]]
#  View(tbls$AgAssess)
# Agricultural Assessment Information (print page)
tbls$AgAssessP <- html3 %>%
html_nodes("table") %>%
.[4] %>%
html_table(fill = TRUE) %>%
.[[1]]
# View(tbls$AgAssessP)
# Historical Tax Information
tbls$AllTax <- html2 %>%
html_nodes("table") %>%
.[15] %>%
html_table(fill = TRUE) %>%
.[[1]]
# View(tbls$AllTax)
# # Historical Tax Information
# tbls$AllTax <- html2 %>%
#   html_nodes("table") %>%
#   .[15] %>%
#   html_table(fill = TRUE) %>%
#   .[[1]]
# View(tbls$AllTax)
print(paste0(tbls$Ownership[8,2], " acres at ", tbls$Ownership[3,2],
" owned by ", tbls$Ownership[2,2], "."))
}
dedications
table(dedications)
table(dedications$Year)
View(D)
View(d)
tbls
View(dedications)
#2020
table <- extract_tables("~/Documents/GitHub/AG-Dedicated/Dedication History/ag2020_121519.pdf", output = "data.frame")
library(rvest)
rpad <- read_html("https://www.realpropertyhonolulu.com/dedications/agricultural-dedications/")
library(tabulizer)
library(dplyr)
install.packages("tabulizer")
install.packages("tabulizer")
R.version
remotes::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
library(tabulizer)
library(dplyr)
#2020
table <- extract_tables("~/Documents/GitHub/AG-Dedicated/Dedication History/ag2020_121519.pdf", output = "data.frame")
#2020
table <- extract_tables("~/Documents/GitHub/AG-Dedicated/Dedication History/ag2020_121519.pdf", output = "data.frame")
library(tabulizer)
library(rvest)
rpad <- read_html("https://www.realpropertyhonolulu.com/dedications/agricultural-dedications/")
rpad <- read_html("https://www.realpropertyhonolulu.com/dedications/agricultural-dedications/")
rrr <- rpad %>% html_nodes("a") %>% # nodes
html_attr('href') %>% data.frame()
# get pdf link
rrr$.[grep("pdf",x = rrr$.)]
library(tabulizer)
library(dplyr)
#2020
table <- extract_tables("~/Documents/GitHub/AG-Dedicated/Dedication History/ag2020_121519.pdf", output = "data.frame")
install.packages("rJava")
#2020
table <- extract_tables("~/Documents/GitHub/AG-Dedicated/Dedication History/ag2020_121519.pdf", output = "data.frame")
# Make a histogram of dedications by year
library(ggplot2)
qplot(dedications$Year,
geom="histogram",
main = "Agricultural Dedications by Year",
xlab = "Year")
qplot(dedications$End.Year,
geom="histogram",
main = "Agricultural Dedications by End Year",
xlab = "Year")
# save the file
write.csv(dedications, "Ag Dedications.csv",row.names = F)
#2021
# put file into Tabula GUI, extracted to CSV
ag20 <- read.csv("Dedication History/tabula-ag2021_121520.csv")
#2021
# put file into Tabula GUI, extracted to CSV
t <- read.csv("Dedication History/tabula-ag2021_121520.csv")
t$End.Year <- as.numeric(t$End.Year)
t$Year <- as.numeric(2021)
rename(t, "Parcel.ID..TMK.","TMK")
rename(t, "TMK" = "Parcel.ID..TMK.")
rename(t, "TMK" = "Parcel.ID..TMK.")
t <- rename(t, "TMK" = "Parcel.ID..TMK.")
t$TMK <- as.character(t$TMK)
ag21 <- t
rm(ag20)
View(ded18)
#2020
# put file into Tabula GUI, extracted to CSV
t <- read.csv("Dedication History/tabula-ag2020_121520.csv")
#2020
# put file into Tabula GUI, extracted to CSV
t <- read.csv("Dedication History/tabula-ag2020_121519.csv")
t <- rename(t, "TMK" = "Parcel.ID..TMK.")
t$TMK <- as.character(t$TMK)
t$End.Year <- as.numeric(t$End.Year)
t$Year <- as.numeric(2021)
t$Year <- as.numeric(2020)
ag20 <- t
dedications <- bind_rows(dedication, ag20, ag21)
dedications <- bind_rows(dedications, ag20, ag21)
glimpse(dedications)
# save the file
write.csv(dedications, "Ag Dedications.csv",row.names = F)
View(dedications)
qplot(dedications$Year,
geom="histogram",
main = "Agricultural Dedications by Year",
xlab = "Year")
own <- read.csv("~/Downloads/OWNERDAT_-_Table.csv")
dedications$TMK[1:8]
merge(dedications, y, substr(dedications$TMK)[1:8], by.y,all.x,all.y, sort = TRUE)
substr(dedications$TMK)[1:8]
substr(dedications$TMK, 1,8)
own$TMK
merge(dedications, y, substr(dedications$TMK, 1,8), own$TMK,all.x = TRUE, sort = TRUE)
merge(dedications, own, substr(dedications$TMK, 1,8), own$TMK,all.x = TRUE, sort = TRUE)
merge(dedications, own, by.x = substr(dedications$TMK, 1,8), by.y = own$TMK,all.x = TRUE, sort = TRUE)
merge(dedications, own, by.x = dedications$TMK, by.y = own$TMK,all.x = TRUE, sort = TRUE)
merge(dedications, own, by.x = substr(dedications$TMK, 1,8), by.y = own$TMK,all.x = TRUE, sort = TRUE)
merge(dedications, own, by.x = dedications$TMK, by.y = own$TMK,all.x = TRUE, sort = TRUE)
merge(x=dedications, y=own, by = "TMK",all.x = TRUE, sort = TRUE)
merge(x=dedications, y=own, by = "TMK", sort = TRUE)
merge(x=dedications, y=own, by.x=substr(dedications$TMK,1,8),by.y = own$TMK, sort = TRUE)
merge(x=dedications, y=own, by.x=substr(dedications$TMK,1,8),by.y = as.character(own$TMK), sort = TRUE)
d8 <- dedications
d8$TMK8 <- substr(dedications$TMK,1,8)
merge(x=dedications, y=own, by.x=d8$TMK8, by.y = as.character(own$TMK), sort = TRUE)
merge(x=dedications, y=own, by.x="TMK8", by.y = "TMK", sort = TRUE)
merge(x=d8, y=own, by.x="TMK8", by.y = "TMK", sort = TRUE)
merge(x=d8, y=own, by.x="TMK8", by.y = "TMK", all.x=TRUE, sort = TRUE)
merge(x=d8, y=own, by.x="TMK8", by.y = "TMK", all.x=TRUE, sort = TRUE)
merge(x=d8, y=own, by.x="TMK8", by.y = "TMK8", all.x=TRUE, sort = TRUE)
merge(x=d8, y=own, by.x="TMK8", by.y = "TMK", all.x=TRUE, sort = TRUE)
d8 <- dedications
d8$TMK <- substr(dedications$TMK,1,8)
merge(x = d8, y = own, by = "TMK", all.x = TRUE)
merge(x = d8, y = own, by = "TMK", all.x = TRUE) %>% View()
d8 <- merge(x = d8, y = own, by = "TMK", all.x = TRUE)
d21 <- d8 %>% select(Year = 2021)
d21 <- d8 %>% filter(Year = 2021)
d21 <- d8 %>% filter(Year = "2021")
d21 <- d8 %>% filter(Year == 2021)
View(d21)
own$PARID <- as.character(own$PARID)
merge(x=dedications, y=own, by.x="TMK", by.y = "PARID", all.x=TRUE, sort = TRUE)
rm(d8)
rm(d21)
d21 <- merge(x=dedications, y=own, by.x="TMK", by.y = "PARID", all.x=TRUE, sort = TRUE) %>% filter(Year == 2021)
View(d21)
library(raster)
library(raster)
# read data
p <- shapefile("~/GIS/GIS Files/oahtmk.shp/oahtmk.shp")
d <- d21
# merge on common variable, here called 'key'
m <- merge(p, d, by='TMK')
# perhaps save as shapefile again
shapefile(m, "path/merged.shp")
# perhaps save as shapefile again
shapefile(m, "merged.shp")
# merge on common variable, here called 'key'
m <- merge(p, d, by='TMK', all.y= TRUE)
# perhaps save as shapefile again
shapefile(m, "merged.shp")
# perhaps save as shapefile again
shapefile(m, "merged.shp", overwrite=TRUE)
# merge on common variable, here called 'key'
m <- merge(p, d, by='TMK', all.y= TRUE)
# merge on common variable, here called 'key'
m <- merge(d,p by='TMK', all.x= TRUE)
# merge on common variable, here called 'key'
m <- merge(d, p, by='TMK', all.x= TRUE)
# merge on common variable, here called 'key'
m <- merge(p,d, by='TMK', all.y= TRUE)
m$Year
m$Year %>% unique()
# merge on TMK
m <- merge(p, d, by='TMK')
m$Year %>% unique()
m$TMK %>% unique()
d <- d21
# merge on TMK
m <- merge(p, d, by='TMK')
m@data$TMK
m@data$Year
d$TMK <- d21$TMK.y
# merge on TMK
m <- merge(p, d, by='TMK')
d <- d21 %>% select(-TMK)
d <- d21 %>% select(-"TMK")
d <- d21 %>% select(-c("TMK"))
d <- d21 %>% select(-c(TMK))
d <- d21 %>% select(-TMK)
d21 %>% select(-TMK)
library(dplyr)
d21 %>% select(-TMK)
d$TMK <- d21$TMK.y
# merge on TMK
m <- merge(p, d, by='TMK')
library(sp)
# merge on TMK
m <- sp::merge(p, d, by='TMK', duplicateGeoms = TRUE)
m$Year %>% unique()
m <- m %>% filter(Year == 2021)
m %>% filter(Year == 2021)
m@data %>% filter(Year == 2021)
m <- m[m == 2021,]
m <- m[m = 2021,]
m <- m[m$Year = 2021,]
m <- m[m$Year == 2021,]
m <- m[m$Year = '2021',]
m[m$Year > 2020,]
m[complete.cases(m$Year), ]
m <- m[complete.cases(m$Year), ]
# save shapefile
shapefile(m, "merged.shp", overwrite=TRUE)
write.csv(d21, "2021 ag dedication ownership.csv",row.names = F)
write.csv(m@data, "2021 ag dedication parcels.csv",row.names = F)
